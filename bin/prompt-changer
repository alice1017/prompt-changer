#!/bin/bash
# coding: utf-8

# Define argument flags
ARG_LIST=false
ARG_TRY=false
ARG_TRY_VALUE=""

# Define variables
PROMPT_STYLE=""

ROOTDIR="$(cd $(dirname $0); pwd)"
PROMPTS_DIR="${ROOTDIR%/}/prompts"

ZSH_DIR="${HOME%/}/.zsh"
ZSH_PROMPT_DIR="${ZSH_DIR%/}/prompts"

USAGE="usage: prompt-changer [-h] [-l] [-t STYLE] [style]"
DESCRIPTION="${USAGE}

The prompt-changer provides a command line tool for changing zsh prompt.

positional arguments:
  style          The prompt style name.

optional arguments:
  -h, --help      show this help message and exit
  -l, --list      Display the prompt styles list
  -t STYLE, --try STYLE
                  You can try a prompt style in new shell process"

# Define function
sync_prompt_styles() {
    ls "$PROMPTS_DIR" | xargs -n 1 -I $ cp -f "${$PROMPTS_DIR%/}/$" "${ZSH_PROMPT_DIR%/}/$"
    return $?
}

check_exists_style() {
    local style=$1
    local path="${PROMPTS_DIR%/}/${style}.zsh"

    if [ -e "$path" ];then
        return 0
    else
        echo "error: don't exists style '"$style"'" 1>&2
        exit 1
    fi
}

create_symlink() {
    local src=$1
    local dest=$2

    # unlink or remove $dest if exists
    if [ -e "$dest" ];then
        unlink "$dest" || rm "$dest"
    fi

    # echo error msg if $src don't exists
    if [ ! -e "$src" ];then
        echo "error: can't access '"$src"'" 1>&2
        exit 1
    fi

    ln -s "${src}" "${dest}"
    return $?
}

relpath() {
    echo "$(realpath --relative-to "$(pwd)" "$1")"
}

# Initialize
{
    # mkdir prompt dir
    [ -e "$ZSH_PROMPT_DIR" ] || { mkdir -p "$ZSH_PROMPT_DIR"; }

    # sync prompt styles
    sync_prompt_styles
}


# argument check
if [ "$#" = "0" ];then
    echo "$DESCRIPTION"
    exit 0
fi

# getopt
while getopts lt:h OPT
do
    case $OPT in
        "l" )
            ARG_LIST=true
            ;;
        "t" )
            ARG_TRY=true
            ARG_TRY_VALUE="$OPTARG"
            ;;
        "h" )
            echo "$DESCRIPTION"
            exit 0
            ;;
        * )
            echo "$USAGE"
            exit 1
            ;;
    esac
done

# shift options
shift `expr $OPTIND - 1`
PROMPT_STYLE=$1


# 1. '-l' argument behavior
if $ARG_LIST;then
    echo "prompt styles:"
    ls "$PROMPTS_DIR" \
        | cut -d "." -f 1 \
        | xargs -I % -n 1 echo "  * %" \
        | column
    exit $?
fi

# 2. '-t style' argument behavior
if $ARG_TRY;then

    PROMPT_STYLE="$ARG_TRY_VALUE"
    STYLE_NAME="${PROMPT_STYLE}.zsh"
    SRC_PATH="${PROMPTS_DIR%/}/${STYLE_NAME}"
    DEST_PATH="${ZSH_DIR%/}/prompt.zsh"

    # 2-1. check style exists
    check_exists_style "$PROMPT_STYLE"

    # 2-2. get now link path
    OLD_LINK="$(readlink -f "${DEST_PATH}")"

    echo "debug print at 2-2"
    echo "OLD_LINK -> ${OLD_LINK}"

    # 2-3. unlink & put symlink
    create_symlink "$SRC_PATH" "$DEST_PATH"

    # 2-4. display msg
    echo -n "prompt-changer executes the TRY mode"
    echo -n "by this prompt style: "
    printf "\x1b[1;33m${PROMPT_STYLE}\x1b[0m\n" # YELLOW

    echo -n "If you want to exit this mode, please input '"
    printf "\x1b[1;31mexit\x1b[0m' in your shell.\n" # RED

    # 2-5. execute sub shell
    "$(which zsh)"

    # 2-6. back to old symbolic
    create_symlink "$OLD_LINK" "$DEST_PATH"

    exit 0
fi

# debug print
echo "===== DEBUG PRINT ====="
echo '  * $#       -> '""$#""
echo "  * OPTIND   -> "$OPTIND""
echo "  * ARG_LIST -> "$ARG_LIST""
echo "  * ARG_TRY  -> "$ARG_TRY""
echo "  * ARG_TRY_VALUE -> "$ARG_TRY_VALUE""
echo "  * PROMPT_STYLE  -> "$PROMPT_STYLE""
echo "  * ROOTDIR     -> "$ROOTDIR""
echo "  * PROMPTS_DIR -> "$PROMPTS_DIR""
echo "  * ZSH_DIR     -> "$ZSH_DIR""
